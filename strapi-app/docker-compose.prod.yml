version: "3.8"

services:
  strapi.app:
    container_name: strapi.app.prod
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    restart: always
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapi.db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      NODE_ENV: ${NODE_ENV}
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_KEY: ${CLOUDINARY_KEY}
      CLOUDINARY_SECRET: ${CLOUDINARY_SECRET}
    volumes:
      - .:/var/www/app
      - /var/www/app/node_modules
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapi.db

  strapi.db:
    container_name: strapi.db.prod
    restart: unless-stopped
    image: mysql:8.0
    command:
      - --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - strapi-db-volume-prod:/var/lib/mysql
      - ./db/01.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '3306:3306'
    networks:
      - strapi
#    healthcheck:
#      test: ["CMD", "strapi.db.prod", "-U", "${DATABASE_USERNAME}", "--password=${DATABASE_PASSWORD}"]
#      interval: 5s
#      timeout: 2s
#      retries: 5

volumes:
  strapi-db-volume-prod:
    driver: local

networks:
  strapi:
    driver: bridge
